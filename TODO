Items todo:

* add in static type checking (mypy) and pylint
  - how to do this automatically?

* add in ability to scan for repo directories

* add in ability to continue from where last (failed) scan stopped
  - note that a scan only stops if the "stop on error" option is set

* fix bug where default directory is hard-coded, even though there
  is a default value
  
* add ability to specify type of repo (e.g. "git", etc), for
  operations where appropriate (like list, update, clean)

* show better progress info: at least the repo count?
  (e.g. at least repo number, or "N of M"?)

* store/retrieve DB file as a single data struct.
  - would require creating a data structure/class for the data

* create a man page?

* make subcommand gathering/usage automatic, i.e. any method in some
  sub-directory, or matching a name pattern?

* add selt-tests! -- pyunit is ok for unit testing, but we also
  need command-level testing

  Looking at: pytest, pytest-cov

  What about: pyunit?

* Handle "exceptions" better -- right now, in many (all?) cases,
  error handling is done like C: do an exit, or return a failure,
  but never create an exception, because those are ugly

  But that's not pythonic

* Test 'quiet' option -- not sure it does anything

* Find a better way to pass short help and long help (remove them?)

* add subcommand uses absolute path, but other subcommands don't?

* make "short help" vs "long help" (e.g. use "-l"?)

* make "clean" method in repo classes optional
perhaps define class method as static? somehow there needs to be
a default method, if the sub-class does't define it, that does nothing
